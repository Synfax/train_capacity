library(tidyverse)
library(sf)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(reactablefmtr)
library(plotly)
library(RColorBrewer)
library(ggridges)
library(collapse)
source('../r/constants.R')
near_properties = get_near_osm('Brunswick')
near_properties = near_properties %>%
mutate(area = st_area(geometry))
total_area <- near_properties %>%
pull(area) %>%
sum()
near_properties = get_near_properties('Brunswick') %>%
mutate(area = st_area(geometry))
near_properties = get_near_properties('Brunswick')
near_properties = get_near_properties('Brunswick') %>%
mutate(area = st_area(geom))
total_area <- near_properties %>%
pull(area) %>%
sum()
near_properties %>%
group_by(zone_short) %>%
summarise(pc_area = sum(area)/total_area)
near_properties %>%
group_by(zone_short) %>%
summarise(pc_area = sum(area)/total_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'Neighbourhood Residential'))
near_properties %>%
group_by(zone_short) %>%
summarise(pc_area = sum(area)/total_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(pc_area = sum(area)/total_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/pc_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area, pc_suitable = heritage_pc_area * pc_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area, pc_suitable = (1- heritage_pc_area) * pc_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
near_properties = get_near_properties('Brunswick') %>%
mutate(area = st_area(geom)) %>%
mutate(area = as.vector(area))
near_properties$area
total_area <- near_properties %>%
pull(area) %>%
sum()
near_properties %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area, pc_suitable = (1- heritage_pc_area) * pc_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
sum(0.246+0.0260)
# Chunk 1
#| echo: false
station = params$station
zoom_level = 15
library(knitr)
library(tidyverse)
library(sf)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(reactablefmtr)
library(plotly)
library(RColorBrewer)
library(ggridges)
library(collapse)
source('../r/constants.R')
# Chunk 1
#| echo: false
station = params$station
zoom_level = 15
library(knitr)
library(tidyverse)
library(sf)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(reactablefmtr)
library(plotly)
library(RColorBrewer)
library(ggridges)
library(collapse)
source('../r/constants.R')
library(devtools)
#devtools::install_github("walkerke/mapgl")
library(mapgl)
library(sf)
library(tidyverse)
library(data.table)
library(leaflet)
library(htmltools)
library(quarto)
library(dtplyr)
library(janitor)
library(arrow)
library(stringr)
library(DescTools)
library(mapview)
library(geosphere)
library(chron)
library(RColorBrewer)
library(osmdata)
library(collapse)
library(ggiraph)
library(patchwork)
near_properties = get_near_properties(station, fromQuarto = T)
near_properties = get_near_properties(station, fromQuarto = F)
grz_nrz = near_properties %>%
mutate(isNRZGRZ = case_when((zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth') & !heritage) ~ T, .default =  F ) ) %>%
mutate(colour = ifelse(isNRZGRZ,   '#10461b', 'transparent'))
n_suitable = grz_nrz %>%
st_drop_geometry() %>%
count(isNRZGRZ) %>%
filter(isNRZGRZ) %>%
pull(n)
n_unsuitable = grz_nrz %>%
st_drop_geometry() %>%
count(isNRZGRZ) %>%
filter(!isNRZGRZ) %>%
pull(n)
by_validity <- grz_nrz %>%
group_by(isNRZGRZ) %>%
summarise(total_area = sum(st_area(geom))) %>%
st_drop_geometry()
View(by_validity)
67611+1072243
near_properties_ = get_near_properties('Brunswick') %>%
mutate(area = st_area(geom)) %>%
mutate(area = as.vector(area))
total_area <- near_properties_ %>%
pull(area) %>%
sum()
near_properties_ %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area, pc_suitable = (1- heritage_pc_area) * pc_area ) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential'))
by_validity <- grz_nrz %>%
group_by(isNRZGRZ) %>%
summarise(total_area = sum(st_area(geom))) %>%
st_drop_geometry()
by_validity
station
(0.462 *( 1072243)) + (67611*0.0955)
near_properties_ %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
mutate(heritage_area = heritage_pc_area * sum(area))
near_properties_ %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
mutate(heritage_area = heritage_pc_area * sum_area )
by_validity <- grz_nrz %>%
group_by(isNRZGRZ) %>%
summarise(total_area = sum(st_area(geom))) %>%
st_drop_geometry()
by_validity
grz_nrz %>% filter(isNRZGRZ) %>% v
grz_nrz %>% filter(isNRZGRZ) %>% select(zone_short, heritage) %>% v
grz_nrz %>% filter(isNRZGRZ) %>% select(zone_short, heritage) %>% mutate(area = sum(geom)) %>% pull(area) %>% sum()
grz_nrz %>% filter(isNRZGRZ) %>% select(zone_short, heritage) %>% mutate(area = st_area(geom)) %>% pull(area) %>% sum()
near_properties_ %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area) %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
mutate(heritage_area = heritage_pc_area * sum_area )
rlang::last_trace()
grz_nrz %>% filter(isNRZGRZ) %>% select(zone_short, heritage) %>% mutate(area = st_area(geom)) %>% pull(area) %>% sum()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(sum_area = sum(area), pc_area = sum(area)/total_area, heritage_pc_area = sum(area[heritage])/sum_area) %>%
mutate(heritage_area = heritage_pc_area * sum_area )
grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage) %>%
mutate(area = st_area(geom)) %>%
pull(area) %>%
sum()
View(grz_nrz)
grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage)
grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage) %>% v
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, heritage_pc_in_zone = sum(area[heritage])/sum_area) %>%
mutate(heritage_area = heritage_pc_area * sum_area )
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, heritage_pc_in_zone = sum(area[heritage])/zone_total_area) %>%
mutate(heritage_area = heritage_pc_area * sum_area )
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, heritage_pc_in_zone = sum(area[heritage])/zone_total_area) %>%
mutate(heritage_area = heritage_pc_in_zone * zone_total_area )
sum(6458 + 494972 + 7690)
grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage) %>%
mutate(area = st_area(geom)) %>%
pull(area) %>%
sum()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, heritage_pc_in_zone = sum(area[heritage])/zone_total_area) %>%
mutate(heritage_area = heritage_pc_in_zone * zone_total_area )
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth'))
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
mp()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
filter(!heritage) %>%
mp()
grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage) %>%
mutate(area = st_area(geom)) %>%
mp()
test1 <- grz_nrz %>%
filter(isNRZGRZ) %>%
select(zone_short, heritage) %>%
mutate(area = st_area(geom))
test2 <- near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
filter(!heritage) %>%
mp()
test2 <- near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
filter(!heritage)
test2 <- near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
filter(!heritage) %>%
select(zone_short, heritage, area)
test1 %>% pull(area) %>% sum()
test2 %>% pull(area) %>% sum()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(heritage_area = heritage_pc_in_zone * zone_total_area )
sum(61153, 577271, 28497)
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(not_heritage_area = heritage_pc_in_zone * zone_total_area )
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(not_heritage_area = not_heritage_pc_in_zone * zone_total_area )
666921
666921 / total_area
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(xid = not_heritage_pc_in_zone * zone_pc_of_station)
0.246+0.0260+0.0121
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station)
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
reactable()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>%
reactable()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
mutate(across(where(is.numeric), ~round(.x * 100, 2))) %>%
reactable()
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
mutate(across(where(is.numeric), ~round(.x * 100, 2))) %>%
reactable(
columns = list(
zone_pc_of_station = colDef(name = '% of Total Area'),
not_heritage_pc_in_zone = colDef(name = '% of Zone not Heritage'),
pc_total_area = colDef(name = "% of Total Area not heritage")
)
)
sum(2.6, 24.57, 1.21)
near_properties_ %>%
filter(zone_short %in% c('Neighbourhood residential', 'General residential', 'Residential growth')) %>%
st_drop_geometry() %>%
group_by(zone_short) %>%
summarise(zone_total_area = sum(area), zone_pc_of_station = sum(area)/total_area, not_heritage_pc_in_zone = sum(area[!heritage])/zone_total_area) %>%
mutate(pc_total_area = not_heritage_pc_in_zone * zone_pc_of_station) %>%
select(!zone_total_area) %>%
mutate(across(where(is.numeric), ~round(.x * 100, 2))) %>%
reactable(
columns = list(
zone_pc_of_station = colDef(name = '% of Total Area'),
not_heritage_pc_in_zone = colDef(name = '% of Zone not Heritage'),
pc_total_area = colDef(name = "% of total area suitable")
)
)
source("D:/train_capacity/r/prepare_index_page.R", echo=TRUE)
prepare_index()
targets_df <- data.frame(
Council = c("Boroondara", "Glen Eira", "Bayside", "Hobsons Bay", "Banyule",
"Kingston", "Maroondah", "Monash", "Whitehorse", "Moonee Valley",
"Merri-bek", "Darebin", "Stonnington", "Brimbank", "Manningham",
"Maribyrnong", "Port Phillip", "Yarra", "Melbourne", "Total"),
Current_zoned_capacity = c(57000, 50000, 38000, 35000, 78000,
99000, 79000, 109000, 97000, 81000,
87000, 104000, 79000, 106000, 94000,
71000, 64000, 60000, 84000, 1472000),
New_zoned_capacity = c(923000, 560000, 387000, 338000, 745000,
871000, 655000, 875000, 775000, 630000,
675000, 765000, 537000, 663000, 574000,
416000, 349000, 291000, 296000, 11325000),
Increase_in_zoned_capacity = c("16.0x", "11.3x", "10.1x", "9.6x", "9.5x",
"8.8x", "8.3x", "8.0x", "8.0x", "7.8x",
"7.7x", "7.3x", "6.8x", "6.3x", "6.1x",
"5.9x", "5.5x", "4.9x", "3.5x", "7.7x"),
Yearly_housing_target = c(4900, 2800, 2000, 1100, 3300,
2100, 1200, 1900, 3000, 2500,
2100, 2700, 2700, 200, 2300,
600, 1600, 1500, 1500, 40000)
)
targets_df %>%
select(Council, Yearly_housing_target) %>%
reactable()
targets_df %>%
select(Council, Yearly_housing_target) %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council == 'target') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council != 'Target') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council != 'Total') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
source("D:/train_capacity/r/graphs.R", echo=TRUE)
top_stations_by_lga(include_existing_25 = T, return_lga_with_n_sf = T)
council_stations <-top_stations_by_lga(include_existing_25 = T, return_lga_with_n_sf = T) %>%
st_drop_geometry() %>%
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council != 'Total') %>%
rename(LGA_NAME23 = "Council") %>%
left_join(council_stations, by = 'LGA_NAME23') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
council_stations <-top_stations_by_lga(include_existing_25 = T, return_lga_with_n_sf = T) %>%
st_drop_geometry()
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council != 'Total') %>%
rename(LGA_NAME23 = "Council") %>%
left_join(council_stations, by = 'LGA_NAME23') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable()
targets_df %>%
select(Council, Yearly_housing_target) %>%
filter(Council != 'Total') %>%
rename(LGA_NAME23 = "Council") %>%
left_join(council_stations, by = 'LGA_NAME23') %>%
arrange(desc(Yearly_housing_target)) %>%
reactable(pagination = F)
other_stations = readRDS('../r_objects/station_rankings.Rdata')
other_stations = readRDS('../r_objects/station_rankings.Rdata')
View(other_stations)
other_stations = readRDS('../r_objects/station_rankings.Rdata') %>% filter(!(station %in% df_with_links$station))
df_with_links = readRDS('../r_objects/transformed_scores.Rdata')  %>%
as.data.frame() %>%
mutate(rank = row_number()) %>%
select(station, rank ) %>%
mutate(safe_name = gsub("[^a-zA-Z0-9]", "_", station)) %>%
mutate(win_url = paste0('../stations/', safe_name, '.html')) %>%
select(-safe_name)
other_stations = readRDS('../r_objects/station_rankings.Rdata') %>% filter(!(station %in% df_with_links$station))
#| echo: false
station = params$station
zoom_level = 15
library(knitr)
library(tidyverse)
library(sf)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(reactablefmtr)
library(plotly)
library(RColorBrewer)
library(ggridges)
library(collapse)
source('../r/constants.R')
readRDS('r_objects/station_rankings.Rdata') %>%
rename(Station_Name = "station") %>%
filter(Station_Name == station) %>%
pivot_longer(-Station_Name) %>%
select(-Station_Name) %>%
mutate(value = round(value, 2))
valid_stations <- readRDS('r_objects/transformed_scores.Rdata') %>% pull(station)
valid_stations <- readRDS('r_objects/station_rankings.Rdata') %>% pull(station)
# Render a report for each station
for (station in valid_stations) {
print(station)
# Create a safe filename
safe_name <- gsub("[^a-zA-Z0-9]", "_", station)
# # Set the output directory for this station
# output_dir <- file.path("stations", safe_name)
# dir.create(output_dir, recursive = T, showWarnings = FALSE)
#
# Sys.sleep(2)
# Render the report
quarto_render(
input = "quarto/run_for_station.qmd",
output_file = paste0(safe_name, ".html"),
execute_params = list(station = station),
output_format = "html", quarto_args = c('--output-dir', '../rankings_website/stations/')
)
# Sys.sleep(2)
#
# fs::file_move(
#   path = file.path(output_dir, paste0(safe_name, ".html")),
#   new_path = file.path(output_dir, "quarto/", paste0(safe_name, ".html"))
# )
#
# Sys.sleep(2)
}
