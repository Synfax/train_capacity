
## K-clustering

```{r warning=FALSE,message=FALSE}
#| echo: false 




station_rankings[, 2:ncol(station_rankings) ] = scale(station_rankings[, 2:ncol(station_rankings) ])


getSS <- function(n) {
  km <- kmeans(station_rankings[, 2:ncol(station_rankings) ], n, iter.max = 10, nstart =  25)
  return(sum(km$withinss))
}

res.df = data.frame(n = 1:10, ss = map(1:10, getSS) %>% unlist() %>% as.vector() )

#plot(x = res.df$n, y= res.df$ss)

## elbow is around 4

km.res <- kmeans(station_rankings[, 2:ncol(station_rankings) ], 4, iter.max = 10, nstart =  25)

station_rankings = station_rankings %>%
  mutate(cluster = km.res$cluster) %>%
  select(Station_Name, cluster)

locations = readRDS('../r_objects/locations.Rdata') %>% left_join(station_rankings, by = 'Station_Name') %>%
  st_as_sf(coords = c('lng', 'lat'))

fillPal = colorFactor('viridis', domain = locations$cluster)

leaflet(locations) %>%
  addProviderTiles('CartoDB.Positron') %>%
  addCircleMarkers(fillColor = ~fillPal(cluster), stroke = NA, fillOpacity = 0.5 ) %>%
  addLegend(position = 'bottomleft', pal = fillPal, values = ~cluster )

```


## PCA

```{r}


station_rankings = readRDS('../r_objects/station_rankings.Rdata') %>%
  as.data.frame() 

pca_result <- prcomp(station_rankings %>%
  select(-station), center = TRUE, scale. = TRUE)

# Step 4: View PCA summary
summary(pca_result)

# Step 5: Visualize results
pca_data <- as.data.frame(pca_result$x)
pca_data = pca_data %>% mutate(name = station_rankings$station)

ggplot(pca_data, aes(x = PC1, y = PC2)) +
  geom_point() +
  theme_minimal() +
  ggtitle("PCA: First two principal components")

# Step 6: Analyze loadings
print(pca_result$rotation)

# Step 7: Calculate variance explained
var_explained <- pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)

# Step 8: Scree plot
scree_data <- data.frame(PC = 1:length(var_explained), 
                         VarExplained = var_explained)
ggplot(scree_data, aes(x = PC, y = VarExplained)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  ggtitle("Scree Plot")

```


## correlations

```{r}

# means <- patronage_data %>%
#   group_by(Business_Date, hour_of_day, Station_Name) %>%
#   summarise(patronage = mean(Passenger_Boardings))
# 
# 
# means_long <- means %>%
#   pivot_wider(names_from = Station_Name, values_from = patronage)
# 
# date_hour <- means_long %>% select(hour_of_day, Business_Date)
# 
# means_long <- means_long %>%
#   ungroup() %>%
#   select(!c(hour_of_day, Business_Date))
# 
# means_long[is.na(means_long)] <- 0
# 
# means_long = scale(means_long)
# 
# cors <- cor(means_long)
# 
# 
# cors = cors %>%
#   as.data.frame() %>%
#   mutate(station_name = rownames(cors))

```