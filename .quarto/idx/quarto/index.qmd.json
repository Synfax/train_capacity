{"title":"combined_scores <- original_values %>%","markdown":{"yaml":{"format":{"closeread-html":{"grid":{"body-width":"900px"},"theme":"zephr","page-layout":"article","remove-header-space":false,"css":["index.css","nav_fixes.css"],"image":"index_images/main.png","cr-section":{"layout":"overlay-left"}}}},"headingText":"combined_scores <- original_values %>%","containsRefs":false,"markdown":"\n\n```{=html}\n<script>\nfunction modifyMainDiv() {\n  console.log('blue');\n  const mainDiv = document.getElementById('quarto-document-content');\n  if (mainDiv) {\n    console.log('found');\n    mainDiv.classList.remove('column-body');\n    mainDiv.classList.add('column-page-right');\n    // You can add more class modifications here\n  }\n}\n\n// This function will be called by the script in the Quarto document\nmodifyMainDiv();\n</script>\n```\n```{r, message=FALSE, warning=FALSE}\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(shiny)\nlibrary(htmlwidgets)\nlibrary(plotly)\nlibrary(reactablefmtr)\n\nlocations <- readRDS('../r_objects/locations.Rdata')\nsource('../r/constants.r')\n\nsource('../r/theme.r')\nsource('../r/graphs.r')\nsource('../r/prepare_index_page.r')\nsource('../r/transform.r')\n\ntransformed_scores <- readRDS('../r_objects/transformed_scores.Rdata')\noriginal_values <- readRDS('../r_objects/station_rankings.Rdata')\n\n#   left_join(transformed_scores, by = 'station') %>%\n#   arrange(desc(score)) %>%\n#   slice_head(n = 10) %>%\n#   mutate(across(where(is.numeric), .fns = function(x) round(x, 2) )) %>%\n#   mutate(rank = row_number())\n\n\ntransformed_scores <- readRDS('../r_objects/transformed_scores.Rdata') %>%\n  remove_null_weighted_cols() %>%\n  as.data.frame() %>%\n  slice_head(n = 25) %>%\n  mutate(across(where(is.numeric), .fns = function(x) round(x, 2) )) %>%\n  mutate(rank = row_number()) \n\nsan_station <- function(x) {\n  return( str_replace(x, ' ', '_') )\n}\n\n# translations = c(\n#   'grz_nrz_pc' = 'Zoning suitability',\n#   'capacity_delta' = 'Potential new homes',\n#   'average_peak_service_freq' = 'Train frequency',\n#   'average_peak_service_cap' = 'Available train capacity',\n#   'walkability_score' = 'Local services',\n#   'distance' = 'Distance to CBD',\n#   'n_bus_tram' = 'Other transport infrastructure'\n# )\n\n# compact_data_bars <- function(data, fill_color = \"#00bfc4\", inside_color = \"white\", outside_color = \"black\", force_outside = FALSE, ...) {\n#   orig_formatter <- reactablefmtr::data_bars(data, fill_color = fill_color, force_outside = force_outside, ...)\n#   \n#   function(value, index, name) {\n#     bar <- orig_formatter(value, index, name)\n#     script <- sprintf(\"\n#       const b = this.querySelector('.bar-cell');\n#       if (b) {\n#         const t = b.querySelector('span');\n#         if (t) t.style.color = (b.querySelector('.bar').offsetWidth < b.offsetWidth && %s) ? '%s' : '%s';\n#       }\n#     \", !force_outside, inside_color, outside_color)\n#     \n#     tagList(bar, tags$script(HTML(script)))\n#   }\n# }\n\ntranslations <- translations <- gsub(\"\\\\s*\\\\([^)]+\\\\)\", \"\", translations)\n\n\nprintScores <- function(r) {\n  \n  transformed_scores %>% \n  filter(rank == r) %>%\n  pivot_longer(-station) %>%\n  select(-station) %>%\n  filter(!(name %in% c('score','rank'))) %>%\n  mutate(name = translations[name]) %>%\n  reactable(\n            class = \"pageinforeactable\",\n            columns = list(\n              'name' = colDef(name = 'Metric'),\n              'value' = colDef(name = \"Score\",\n                             cell = data_bars(.,\n                                              text_position = 'above',\n                                              fill_color = '#1B5E20',\n                                              text_color = 'black',\n                                              background = 'opaque',\n                                              fill_opacity = 1,\n                                              bar_height = 24,\n                                              bold_text = T))\n            )\n            \n            ) %>%\n  return()\n  \n}\n\n```\n\n# The Next 25\n\n::: column-body\n\nAs part of Plan for Victoria, the Government has elected to upzone an additional 50 stations as part of the Activity Centres Program. They have announced and named the first 25, in addition to the 7 included in the initial pilot of the Program.\n\n\nThis is a sound policy. Melbourne has bountiful infrastructure and the ability to accommodate many more Melburnians in the places where they want to live. We have outlined the impetus for transit-oriented planning reform in our previous reports including Melbourne's Missing Middle and Missing Middle Housing Targets. \n\n\nHere, we build upon previous work to answer a simple question: which additional 25 stations should be prioritised for inclusion in the Program? \n\n\n*See the full report [here](report.html \"Full Report\").*\n\n<!-- ### Methodology -->\n\n<!-- \\ -->\n\n<!-- For each train station, metrics are calculated on: -->\n\n<!-- -   Zoning suitability (% land area) -->\n<!-- -   Potential number of new homes (# homes) --> \n<!-- -   Train service frequency in peak (trains per hour) -->\n<!-- -   Spare train line capacity in peak (# passengers) -->\n<!-- -   Local amenities nearby (composite index) -->\n<!-- -   Proximity to CBD (metres) -->\n<!-- -   Bus and tram frequencies (services per hour) -->\n\n<!-- Each metric calculated uses different units of measurement, and need to be transformed into comparable units so that a single score can be generated for each train station. -->\n\n<!-- This report uses xmin-xmax scaling, which transforms each 'raw' metric into a value between zero and one. If a station receives a 'transformed' score of zero, it corresponds to the lowest value out of all stations. Likewise, a value of one represents the best out of all stations in Melbourne. -->\n\n<!-- These 'transformed' scores are summed together to produce a final score for each station. -->\n\n<!-- ::: callout-note -->\n<!-- There are some restrictions placed on final rankings: -->\n\n<!-- -   City loop stations are excluded as they can't be upzoned further. -->\n\n<!-- -   Edge transfer stations (North Melbourne, South Yarra, Richmond) were excluded due to extreme outliers in the data impacting the transformation process. -->\n\n<!-- -   Stations further than 25km of Flinders Street are excluded as they are generally economically unfeasible to upzone. -->\n:::\n\n<!-- The full methodology is contained in the full report. -->\n\n\n<!-- \\ -->\n\n<!-- **`r transformed_scores %>% filter(rank == 1) %>% pull(station)`** was the best station out of those considered in this project. -->\n\n<!-- There is a searchable table and interactive map at the foot of this document to find your own station and see where it ranks. -->\n\n<!-- A chart below shows the scores of the 10 highest ranked stations, with an interactive map underneath to show the spatial distribution. -->\n\n::: column-body\n\n## Map\n::: {.interactive-map}\n```{r}\n\n\n#| fig-height: 4\njs_code <- \"\nfunction(el, x, data) {\n\n  var map = this;\n\n  function updateLabelVisibility() {\n   \n    var currentZoom = map.getZoom();\n   \n    var showLabelsZoomLevel = 13;\n\n    var labels = document.getElementsByClassName('top-25-labels');\n   \n    for (var i = 0; i < labels.length; i++) {\n      if (currentZoom >= showLabelsZoomLevel) {\n        labels[i].style.display = 'block';\n      } else {\n        labels[i].style.display = 'none';\n      }\n    }\n  }\n  \n\n\n  // Ensure the map is fully loaded before adding the event listener\n  map.whenReady(function() {\n  \n\n    map.on('zoomend', function() {\n  \n      updateLabelVisibility();\n    });\n    \n    // Initial call to set correct visibility\n    updateLabelVisibility();\n  });\n}\n\n\"\n\n\nm <- prepare_index(returnTopTen = T, topN = 25, fromQuarto = T, font_size_q = '8pt', h = '600px', w = '100%', fillC = \"white\", ringC = \"#283696\") %>%\n  htmlwidgets::onRender(js_code)\n\nm\n\n```\n:::\n\n## Chart\n\n```{r}\n#| fig-height: 6\n\ntemp_graph <- readRDS('../r_objects/transformed_scores.Rdata') %>% \n    as.data.frame() %>%\n    select(station, score) %>%\n    arrange(desc(score)) %>%\n    mutate(score = round(score, 2)) %>%\n    slice_head(n = 25) %>%\n    ggplot(mapping = aes(y = reorder(station, score), x = score, fill = score )) +\n    scale_fill_gradientn(colors = create_green_palette(11)) +\n    geom_col() +\n    ylab(\"Station\") +\n    theme_report() + \n  theme(legend.position = \"none\")\n  \n  ggplotly(temp_graph) %>% plotly::layout(showlegend = F)\n\n```\n\n## Brief Methodology\n\nOf all Melbourne's stations, these 25 are the most viable for upzoning. \n\nFor each of Melbourne's train station, metrics are calculated on:\n\n - The proportion of residential land zoned NRZ and GRZ, excluding heritage overlays\n  - The number of trains per hour during peak travel times\n  - The amount of spare train capacity during peak travel times\n  - The diversity of nearby local amenities such as parks and schools\n  - The distance from the CBD (stations beyond 25km are excluded)\n  - The frequency of nearby bus and tram services\n  \n  \nA comprehensive explanation of the report's methodology is available [here].\n\n\n\n## Distribution by LGA\n\nThe best stations for upzoning are not equally distributed across Melbourne.\n\nHover over the bar chart below for an interactive effect.\n:::\n\n::: column-body\n```{r}\n\ntop_stations_by_lga() \n\n```\n:::\n\n### Searchable Map\n\n\\\n\nPages for each individual train station have also been produced to detail how each performed in the metrics.\n\nThe map below is interactive and clickable. Scroll and find any train station and click the label for further information.\n\n::: {.column-body}\n\n```{r}\n\n\njs_code <- \"\nfunction(el, x, data) {\n\n    var marker = document.getElementsByClassName('my-labels');\n  for(var i=0; i < marker.length; i++){\n    (function(){\n      console.log('hello');\n      var v = data.win_url[i];\n      marker[i].addEventListener('click', function() { window.open(v);}, false);\n  }()); \n  }\n\n  var map = this;\n  \n  \n  \n  \n\n  function updateLabelVisibility() {\n   \n    var currentZoom = map.getZoom();\n   \n    var showLabelsZoomLevel = 13;\n\n    var labels = document.getElementsByClassName('my-labels');\n   \n    for (var i = 0; i < labels.length; i++) {\n      if (currentZoom >= showLabelsZoomLevel) {\n        labels[i].style.display = 'block';\n      } else {\n        labels[i].style.display = 'none';\n      }\n    }\n  }\n  \n\n\n  // Ensure the map is fully loaded before adding the event listener\n  map.whenReady(function() {\n  \n  \n \n    map.on('zoomend', function() {\n  \n      updateLabelVisibility();\n    });\n    \n    // Initial call to set correct visibility\n    updateLabelVisibility();\n  });\n}\n\n\"\n\ncolours = tribble(\n  ~group, ~ colour,\n  'Sandringham' , \"#F178AF\",\n  'CrossCity' , \"#028430\",\n  'Cran/Pak' , \"#279FD5\",\n  \"Burnley\" , \"#152C6B\",\n  \"Northern\" , \"#FFBE00\",\n  \"Eastern\" , \"#BE1014\",\n  'event' , \"#95979A\"\n)\n\nlines_dissolved <- read_sf('../shapefiles/qgis/final_map.shp') %>%\n  left_join(colours, by = 'group') \n\nvalid_stations <-  readRDS('../r_objects/transformed_scores.Rdata') %>%\n  pull(station)\n\nlocations = locations %>%\n  filter(Station_Name %in% valid_stations) %>%\n  mutate(safe_name = gsub(\"[^a-zA-Z0-9]\", \"_\", Station_Name)) %>%\n  mutate(message = \n           paste0(\n             '<div style = \\\" background-color: black; \\\">',\n             \"<p style = \\\" color: white; text-align:center ; padding: 5px; \\\" >\", Station_Name, '</p>',\n             '</div>'\n             \n           )\n  ) %>%\n  mutate(win_url = paste0('../stations/', safe_name, '.html'))\n\nm <- leaflet(width = '100%', height = '600px') %>%\n  leaflet::setView(lng = 144.9668, lat = -37.8181, zoom = 12) %>%\n  addPolylines(data = lines_dissolved, color = ~colour, opacity = 1) %>%\n  addTiles('https://tiles.stadiamaps.com/tiles/stamen_toner_background/{z}/{x}/{y}.png?api_key=090a847c-32a2-4e35-99a9-543ad8f4ecc8', options = tileOptions(opacity = 0.5)) %>%\n  addCircleMarkers(lng = locations$lng, lat=locations$lat, radius = 5, color = 'black', fillColor = 'black', fillOpacity = 1, opacity = 0.7) %>%\n  addLabelOnlyMarkers(lng = locations$lng,\n                      lat = locations$lat,\n                      label = lapply(locations$message, htmltools::HTML),\n                      labelOptions = labelOptions(noHide = T, clickable = T,  className = 'my-labels', direction = 'auto', textOnly = T, textsize = '10pt',\n                                                  style = list(\n                                                    'font-weight' = '800',\n                                                    'text-decoration' = 'underline',\n                                                    'text-decoration-color' = 'white',\n                                                    'margin' = '5px',\n                                                    'letter-spacing' = '0.5px'\n                                                  ))) %>%\n  htmlwidgets::onRender(js_code, data = locations)\n\nm\n\n```\n\n:::\n\n### Searchable Table\n\nThe table below contains links to each individual station page.\n\n:::{.column-body}\n```{r}\n\n# transformed_scores %>%\n#   select(station, score) %>%\n#   reactable(theme = cyborg(),\n#             class = \"pageinforeactable\",\n#             columns = list(\n#               'station' = colDef(name = 'station'),\n#               'score' = colDef(name = \"Score\",\n#                              cell = data_bars(.,\n#                                               fill_color = 'white',\n#                                               background = 'opaque'))\n#             )\n#             \n#             )\n\n\n\n# readRDS('../r_objects/transformed_scores.Rdata') %>%\n#   as.data.frame() %>%\n#   mutate(across(where(is.numeric), ~round(.x, 2))) %>%\n#   rename(!!!translations) %>%\n#   reactable(theme = sandstone(),searchable = T, defaultSorted = \"Total Score\", defaultSortOrder = \"desc\", defaultPageSize = 10)\n\n\n df_with_links = readRDS('../r_objects/transformed_scores.Rdata')  %>%\n  as.data.frame() %>%\n  select(station) %>%\n  mutate(safe_name = gsub(\"[^a-zA-Z0-9]\", \"_\", station)) %>%\n  mutate(win_url = paste0('../stations/', safe_name, '.html')) %>%\n  select(-safe_name)\n\nreactable(df_with_links,\n          filterable = T,\n  columns = list(\n    station = colDef(\n      name = \"Station\",\n      cell = function(value, index) {\n        url <- df_with_links$win_url[index]\n        htmltools::a(href = url, value, target = \"_blank\")\n      }\n    ),\n    win_url = colDef(show = FALSE)  # Hide the URL column\n  )\n)\n\n```\n:::\n\n::: column-body\n# In-Depth Analysis of Top 10 Stations\n\nThis next section will step through the next 25 recommended stations. \n\nIt will include a breakdown of how its score was formed, which uses the transformed scores discussed in the methodology section. These scores are bounded between zero and one.\n\nA table below shows a *rough* guide of how to interpret the transformed scores.\n\n| Transformed Value | Interpretation |\n|-------------------|----------------|\n| 0-0.35            | Poor           |\n| 0.35 - 0.6        | Low            |\n| 0.6 - 0.8         | Good           |\n| 0.8 - 1           | Excellent      |\n\nUse a laptop or desktop for the best viewing experience. (keep scrolling!)\n:::\n\n::: cr-section\n::: {focus-on=\"cr-map1\"}\n## [`r transformed_scores$station[1]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[1]), '.html')`)\n\n###### Rank: 1\n\n###### Total Score: `r transformed_scores$score[1]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(1)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[1]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map2\"}\n## [`r transformed_scores$station[2]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[2]), '.html')`)\n\n###### Rank: 2\n\n###### Total Score: `r transformed_scores$score[2]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(2)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[2]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map3\"}\n## [`r transformed_scores$station[3]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[3]), '.html')`)\n\n###### Rank: 3\n\n###### Total Score: `r transformed_scores$score[3]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(3)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[3]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map4\"}\n## [`r transformed_scores$station[4]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[4]), '.html')`)\n\n###### Rank: 4\n\n###### Total Score: `r transformed_scores$score[4]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(4)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[4]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map5\"}\n## [`r transformed_scores$station[5]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[5]), '.html')`)\n\n###### Rank: 5\n\n###### Total Score: `r transformed_scores$score[5]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(5)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[5]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map6\"}\n## [`r transformed_scores$station[6]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[6]), '.html')`)\n\n###### Rank: 6\n\n###### Total Score: `r transformed_scores$score[6]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(6)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[6]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map7\"}\n## [`r transformed_scores$station[7]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[7]), '.html')`)\n\n###### Rank: 7\n\n###### Total Score: `r transformed_scores$score[7]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(7)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[7]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map8\"}\n## [`r transformed_scores$station[8]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[8]), '.html')`)\n\n###### Rank: 8\n\n###### Total Score: `r transformed_scores$score[8]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(8)\n\n```\n\nSee more information [here](%60r%20paste0('stations/',san_station(transformed_scores$station%5B8%5D),'/quarto/',san_station(transformed_scores$station%5B8%5D),'.html')%20%60).\n:::\n\n::: {focus-on=\"cr-map9\"}\n## [`r transformed_scores$station[9]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[9]), '.html')`)\n\n###### Rank: 9\n\n###### Total Score: `r transformed_scores$score[9]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(9)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[9]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map10\"}\n## [`r transformed_scores$station[10]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[10]), '.html')`)\n\n###### Rank: 10\n\n###### Total Score: `r transformed_scores$score[10]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(10)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[10]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map11\"}\n## [`r transformed_scores$station[11]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[11]), '.html')`)\n\n###### Rank: 11\n\n###### Total Score: `r transformed_scores$score[11]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(11)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[11]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map12\"}\n## [`r transformed_scores$station[12]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[12]), '.html')`)\n\n###### Rank: 12\n\n###### Total Score: `r transformed_scores$score[1]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(12)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[12]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map13\"}\n## [`r transformed_scores$station[13]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[13]), '.html')`)\n\n###### Rank: 13\n\n###### Total Score: `r transformed_scores$score[10]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(13)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[13]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map14\"}\n## [`r transformed_scores$station[14]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[14]), '.html')`)\n\n###### Rank: 14\n\n###### Total Score: `r transformed_scores$score[14]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(14)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[14]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map15\"}\n## [`r transformed_scores$station[15]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[15]), '.html')`)\n\n###### Rank: 15\n\n###### Total Score: `r transformed_scores$score[15]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(15)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[15]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map16\"}\n## [`r transformed_scores$station[16]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[16]), '.html')`)\n\n###### Rank: 16\n\n###### Total Score: `r transformed_scores$score[16]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(16)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[16]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map17\"}\n## [`r transformed_scores$station[17]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[17]), '.html')`)\n\n###### Rank: 17\n\n###### Total Score: `r transformed_scores$score[17]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(17)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[17]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map18\"}\n## [`r transformed_scores$station[18]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[18]), '.html')`)\n\n###### Rank: 18\n\n###### Total Score: `r transformed_scores$score[18]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(18)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[18]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map19\"}\n## [`r transformed_scores$station[19]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[19]), '.html')`)\n\n###### Rank: 19\n\n###### Total Score: `r transformed_scores$score[19]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(19)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[19]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map20\"}\n## [`r transformed_scores$station[20]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[20]), '.html')`)\n\n###### Rank: 20\n\n###### Total Score: `r transformed_scores$score[20]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(20)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[20]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map21\"}\n## [`r transformed_scores$station[21]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[21]), '.html')`)\n\n###### Rank: 21\n\n###### Total Score: `r transformed_scores$score[21]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(21)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[21]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map22\"}\n## [`r transformed_scores$station[22]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[22]), '.html')`)\n\n###### Rank: 22\n\n###### Total Score: `r transformed_scores$score[22]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(22)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[22]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map23\"}\n## [`r transformed_scores$station[23]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[23]), '.html')`)\n\n###### Rank: 23\n\n###### Total Score: `r transformed_scores$score[23]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(23)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[23]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map24\"}\n## [`r transformed_scores$station[24]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[24]), '.html')`)\n\n###### Rank: 24\n\n###### Total Score: `r transformed_scores$score[24]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(24)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[24]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map25\"}\n## [`r transformed_scores$station[25]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[25]), '.html')`)\n\n###### Rank: 25\n\n###### Total Score: `r transformed_scores$score[25]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(25)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[25]), '.html')`).\n:::\n\n::: {#cr-main}\n:::\n\n::: {#cr-map1}\n:::\n\n::: {#cr-map2}\n:::\n\n::: {#cr-map3}\n:::\n\n::: {#cr-map4}\n:::\n\n::: {#cr-map5}\n:::\n\n::: {#cr-map6}\n:::\n\n::: {#cr-map7}\n:::\n\n::: {#cr-map8}\n:::\n\n::: {#cr-map9}\n:::\n\n::: {#cr-map10}\n:::\n\n::: {#cr-map11}\n:::\n\n::: {#cr-map12}\n:::\n\n::: {#cr-map13}\n:::\n\n::: {#cr-map14}\n:::\n\n::: {#cr-map15}\n:::\n\n::: {#cr-map16}\n:::\n\n::: {#cr-map17}\n:::\n\n::: {#cr-map18}\n:::\n\n::: {#cr-map19}\n:::\n\n::: {#cr-map20}\n:::\n\n::: {#cr-map21}\n:::\n\n::: {#cr-map22}\n:::\n\n::: {#cr-map23}\n:::\n\n::: {#cr-map24}\n:::\n\n::: {#cr-map25}\n:::\n\n:::\n","srcMarkdownNoYaml":"\n\n```{=html}\n<script>\nfunction modifyMainDiv() {\n  console.log('blue');\n  const mainDiv = document.getElementById('quarto-document-content');\n  if (mainDiv) {\n    console.log('found');\n    mainDiv.classList.remove('column-body');\n    mainDiv.classList.add('column-page-right');\n    // You can add more class modifications here\n  }\n}\n\n// This function will be called by the script in the Quarto document\nmodifyMainDiv();\n</script>\n```\n```{r, message=FALSE, warning=FALSE}\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(shiny)\nlibrary(htmlwidgets)\nlibrary(plotly)\nlibrary(reactablefmtr)\n\nlocations <- readRDS('../r_objects/locations.Rdata')\nsource('../r/constants.r')\n\nsource('../r/theme.r')\nsource('../r/graphs.r')\nsource('../r/prepare_index_page.r')\nsource('../r/transform.r')\n\ntransformed_scores <- readRDS('../r_objects/transformed_scores.Rdata')\noriginal_values <- readRDS('../r_objects/station_rankings.Rdata')\n\n# combined_scores <- original_values %>%\n#   left_join(transformed_scores, by = 'station') %>%\n#   arrange(desc(score)) %>%\n#   slice_head(n = 10) %>%\n#   mutate(across(where(is.numeric), .fns = function(x) round(x, 2) )) %>%\n#   mutate(rank = row_number())\n\n\ntransformed_scores <- readRDS('../r_objects/transformed_scores.Rdata') %>%\n  remove_null_weighted_cols() %>%\n  as.data.frame() %>%\n  slice_head(n = 25) %>%\n  mutate(across(where(is.numeric), .fns = function(x) round(x, 2) )) %>%\n  mutate(rank = row_number()) \n\nsan_station <- function(x) {\n  return( str_replace(x, ' ', '_') )\n}\n\n# translations = c(\n#   'grz_nrz_pc' = 'Zoning suitability',\n#   'capacity_delta' = 'Potential new homes',\n#   'average_peak_service_freq' = 'Train frequency',\n#   'average_peak_service_cap' = 'Available train capacity',\n#   'walkability_score' = 'Local services',\n#   'distance' = 'Distance to CBD',\n#   'n_bus_tram' = 'Other transport infrastructure'\n# )\n\n# compact_data_bars <- function(data, fill_color = \"#00bfc4\", inside_color = \"white\", outside_color = \"black\", force_outside = FALSE, ...) {\n#   orig_formatter <- reactablefmtr::data_bars(data, fill_color = fill_color, force_outside = force_outside, ...)\n#   \n#   function(value, index, name) {\n#     bar <- orig_formatter(value, index, name)\n#     script <- sprintf(\"\n#       const b = this.querySelector('.bar-cell');\n#       if (b) {\n#         const t = b.querySelector('span');\n#         if (t) t.style.color = (b.querySelector('.bar').offsetWidth < b.offsetWidth && %s) ? '%s' : '%s';\n#       }\n#     \", !force_outside, inside_color, outside_color)\n#     \n#     tagList(bar, tags$script(HTML(script)))\n#   }\n# }\n\ntranslations <- translations <- gsub(\"\\\\s*\\\\([^)]+\\\\)\", \"\", translations)\n\n\nprintScores <- function(r) {\n  \n  transformed_scores %>% \n  filter(rank == r) %>%\n  pivot_longer(-station) %>%\n  select(-station) %>%\n  filter(!(name %in% c('score','rank'))) %>%\n  mutate(name = translations[name]) %>%\n  reactable(\n            class = \"pageinforeactable\",\n            columns = list(\n              'name' = colDef(name = 'Metric'),\n              'value' = colDef(name = \"Score\",\n                             cell = data_bars(.,\n                                              text_position = 'above',\n                                              fill_color = '#1B5E20',\n                                              text_color = 'black',\n                                              background = 'opaque',\n                                              fill_opacity = 1,\n                                              bar_height = 24,\n                                              bold_text = T))\n            )\n            \n            ) %>%\n  return()\n  \n}\n\n```\n\n# The Next 25\n\n::: column-body\n\nAs part of Plan for Victoria, the Government has elected to upzone an additional 50 stations as part of the Activity Centres Program. They have announced and named the first 25, in addition to the 7 included in the initial pilot of the Program.\n\n\nThis is a sound policy. Melbourne has bountiful infrastructure and the ability to accommodate many more Melburnians in the places where they want to live. We have outlined the impetus for transit-oriented planning reform in our previous reports including Melbourne's Missing Middle and Missing Middle Housing Targets. \n\n\nHere, we build upon previous work to answer a simple question: which additional 25 stations should be prioritised for inclusion in the Program? \n\n\n*See the full report [here](report.html \"Full Report\").*\n\n<!-- ### Methodology -->\n\n<!-- \\ -->\n\n<!-- For each train station, metrics are calculated on: -->\n\n<!-- -   Zoning suitability (% land area) -->\n<!-- -   Potential number of new homes (# homes) --> \n<!-- -   Train service frequency in peak (trains per hour) -->\n<!-- -   Spare train line capacity in peak (# passengers) -->\n<!-- -   Local amenities nearby (composite index) -->\n<!-- -   Proximity to CBD (metres) -->\n<!-- -   Bus and tram frequencies (services per hour) -->\n\n<!-- Each metric calculated uses different units of measurement, and need to be transformed into comparable units so that a single score can be generated for each train station. -->\n\n<!-- This report uses xmin-xmax scaling, which transforms each 'raw' metric into a value between zero and one. If a station receives a 'transformed' score of zero, it corresponds to the lowest value out of all stations. Likewise, a value of one represents the best out of all stations in Melbourne. -->\n\n<!-- These 'transformed' scores are summed together to produce a final score for each station. -->\n\n<!-- ::: callout-note -->\n<!-- There are some restrictions placed on final rankings: -->\n\n<!-- -   City loop stations are excluded as they can't be upzoned further. -->\n\n<!-- -   Edge transfer stations (North Melbourne, South Yarra, Richmond) were excluded due to extreme outliers in the data impacting the transformation process. -->\n\n<!-- -   Stations further than 25km of Flinders Street are excluded as they are generally economically unfeasible to upzone. -->\n:::\n\n<!-- The full methodology is contained in the full report. -->\n\n\n<!-- \\ -->\n\n<!-- **`r transformed_scores %>% filter(rank == 1) %>% pull(station)`** was the best station out of those considered in this project. -->\n\n<!-- There is a searchable table and interactive map at the foot of this document to find your own station and see where it ranks. -->\n\n<!-- A chart below shows the scores of the 10 highest ranked stations, with an interactive map underneath to show the spatial distribution. -->\n\n::: column-body\n\n## Map\n::: {.interactive-map}\n```{r}\n\n\n#| fig-height: 4\njs_code <- \"\nfunction(el, x, data) {\n\n  var map = this;\n\n  function updateLabelVisibility() {\n   \n    var currentZoom = map.getZoom();\n   \n    var showLabelsZoomLevel = 13;\n\n    var labels = document.getElementsByClassName('top-25-labels');\n   \n    for (var i = 0; i < labels.length; i++) {\n      if (currentZoom >= showLabelsZoomLevel) {\n        labels[i].style.display = 'block';\n      } else {\n        labels[i].style.display = 'none';\n      }\n    }\n  }\n  \n\n\n  // Ensure the map is fully loaded before adding the event listener\n  map.whenReady(function() {\n  \n\n    map.on('zoomend', function() {\n  \n      updateLabelVisibility();\n    });\n    \n    // Initial call to set correct visibility\n    updateLabelVisibility();\n  });\n}\n\n\"\n\n\nm <- prepare_index(returnTopTen = T, topN = 25, fromQuarto = T, font_size_q = '8pt', h = '600px', w = '100%', fillC = \"white\", ringC = \"#283696\") %>%\n  htmlwidgets::onRender(js_code)\n\nm\n\n```\n:::\n\n## Chart\n\n```{r}\n#| fig-height: 6\n\ntemp_graph <- readRDS('../r_objects/transformed_scores.Rdata') %>% \n    as.data.frame() %>%\n    select(station, score) %>%\n    arrange(desc(score)) %>%\n    mutate(score = round(score, 2)) %>%\n    slice_head(n = 25) %>%\n    ggplot(mapping = aes(y = reorder(station, score), x = score, fill = score )) +\n    scale_fill_gradientn(colors = create_green_palette(11)) +\n    geom_col() +\n    ylab(\"Station\") +\n    theme_report() + \n  theme(legend.position = \"none\")\n  \n  ggplotly(temp_graph) %>% plotly::layout(showlegend = F)\n\n```\n\n## Brief Methodology\n\nOf all Melbourne's stations, these 25 are the most viable for upzoning. \n\nFor each of Melbourne's train station, metrics are calculated on:\n\n - The proportion of residential land zoned NRZ and GRZ, excluding heritage overlays\n  - The number of trains per hour during peak travel times\n  - The amount of spare train capacity during peak travel times\n  - The diversity of nearby local amenities such as parks and schools\n  - The distance from the CBD (stations beyond 25km are excluded)\n  - The frequency of nearby bus and tram services\n  \n  \nA comprehensive explanation of the report's methodology is available [here].\n\n\n\n## Distribution by LGA\n\nThe best stations for upzoning are not equally distributed across Melbourne.\n\nHover over the bar chart below for an interactive effect.\n:::\n\n::: column-body\n```{r}\n\ntop_stations_by_lga() \n\n```\n:::\n\n### Searchable Map\n\n\\\n\nPages for each individual train station have also been produced to detail how each performed in the metrics.\n\nThe map below is interactive and clickable. Scroll and find any train station and click the label for further information.\n\n::: {.column-body}\n\n```{r}\n\n\njs_code <- \"\nfunction(el, x, data) {\n\n    var marker = document.getElementsByClassName('my-labels');\n  for(var i=0; i < marker.length; i++){\n    (function(){\n      console.log('hello');\n      var v = data.win_url[i];\n      marker[i].addEventListener('click', function() { window.open(v);}, false);\n  }()); \n  }\n\n  var map = this;\n  \n  \n  \n  \n\n  function updateLabelVisibility() {\n   \n    var currentZoom = map.getZoom();\n   \n    var showLabelsZoomLevel = 13;\n\n    var labels = document.getElementsByClassName('my-labels');\n   \n    for (var i = 0; i < labels.length; i++) {\n      if (currentZoom >= showLabelsZoomLevel) {\n        labels[i].style.display = 'block';\n      } else {\n        labels[i].style.display = 'none';\n      }\n    }\n  }\n  \n\n\n  // Ensure the map is fully loaded before adding the event listener\n  map.whenReady(function() {\n  \n  \n \n    map.on('zoomend', function() {\n  \n      updateLabelVisibility();\n    });\n    \n    // Initial call to set correct visibility\n    updateLabelVisibility();\n  });\n}\n\n\"\n\ncolours = tribble(\n  ~group, ~ colour,\n  'Sandringham' , \"#F178AF\",\n  'CrossCity' , \"#028430\",\n  'Cran/Pak' , \"#279FD5\",\n  \"Burnley\" , \"#152C6B\",\n  \"Northern\" , \"#FFBE00\",\n  \"Eastern\" , \"#BE1014\",\n  'event' , \"#95979A\"\n)\n\nlines_dissolved <- read_sf('../shapefiles/qgis/final_map.shp') %>%\n  left_join(colours, by = 'group') \n\nvalid_stations <-  readRDS('../r_objects/transformed_scores.Rdata') %>%\n  pull(station)\n\nlocations = locations %>%\n  filter(Station_Name %in% valid_stations) %>%\n  mutate(safe_name = gsub(\"[^a-zA-Z0-9]\", \"_\", Station_Name)) %>%\n  mutate(message = \n           paste0(\n             '<div style = \\\" background-color: black; \\\">',\n             \"<p style = \\\" color: white; text-align:center ; padding: 5px; \\\" >\", Station_Name, '</p>',\n             '</div>'\n             \n           )\n  ) %>%\n  mutate(win_url = paste0('../stations/', safe_name, '.html'))\n\nm <- leaflet(width = '100%', height = '600px') %>%\n  leaflet::setView(lng = 144.9668, lat = -37.8181, zoom = 12) %>%\n  addPolylines(data = lines_dissolved, color = ~colour, opacity = 1) %>%\n  addTiles('https://tiles.stadiamaps.com/tiles/stamen_toner_background/{z}/{x}/{y}.png?api_key=090a847c-32a2-4e35-99a9-543ad8f4ecc8', options = tileOptions(opacity = 0.5)) %>%\n  addCircleMarkers(lng = locations$lng, lat=locations$lat, radius = 5, color = 'black', fillColor = 'black', fillOpacity = 1, opacity = 0.7) %>%\n  addLabelOnlyMarkers(lng = locations$lng,\n                      lat = locations$lat,\n                      label = lapply(locations$message, htmltools::HTML),\n                      labelOptions = labelOptions(noHide = T, clickable = T,  className = 'my-labels', direction = 'auto', textOnly = T, textsize = '10pt',\n                                                  style = list(\n                                                    'font-weight' = '800',\n                                                    'text-decoration' = 'underline',\n                                                    'text-decoration-color' = 'white',\n                                                    'margin' = '5px',\n                                                    'letter-spacing' = '0.5px'\n                                                  ))) %>%\n  htmlwidgets::onRender(js_code, data = locations)\n\nm\n\n```\n\n:::\n\n### Searchable Table\n\nThe table below contains links to each individual station page.\n\n:::{.column-body}\n```{r}\n\n# transformed_scores %>%\n#   select(station, score) %>%\n#   reactable(theme = cyborg(),\n#             class = \"pageinforeactable\",\n#             columns = list(\n#               'station' = colDef(name = 'station'),\n#               'score' = colDef(name = \"Score\",\n#                              cell = data_bars(.,\n#                                               fill_color = 'white',\n#                                               background = 'opaque'))\n#             )\n#             \n#             )\n\n\n\n# readRDS('../r_objects/transformed_scores.Rdata') %>%\n#   as.data.frame() %>%\n#   mutate(across(where(is.numeric), ~round(.x, 2))) %>%\n#   rename(!!!translations) %>%\n#   reactable(theme = sandstone(),searchable = T, defaultSorted = \"Total Score\", defaultSortOrder = \"desc\", defaultPageSize = 10)\n\n\n df_with_links = readRDS('../r_objects/transformed_scores.Rdata')  %>%\n  as.data.frame() %>%\n  select(station) %>%\n  mutate(safe_name = gsub(\"[^a-zA-Z0-9]\", \"_\", station)) %>%\n  mutate(win_url = paste0('../stations/', safe_name, '.html')) %>%\n  select(-safe_name)\n\nreactable(df_with_links,\n          filterable = T,\n  columns = list(\n    station = colDef(\n      name = \"Station\",\n      cell = function(value, index) {\n        url <- df_with_links$win_url[index]\n        htmltools::a(href = url, value, target = \"_blank\")\n      }\n    ),\n    win_url = colDef(show = FALSE)  # Hide the URL column\n  )\n)\n\n```\n:::\n\n::: column-body\n# In-Depth Analysis of Top 10 Stations\n\nThis next section will step through the next 25 recommended stations. \n\nIt will include a breakdown of how its score was formed, which uses the transformed scores discussed in the methodology section. These scores are bounded between zero and one.\n\nA table below shows a *rough* guide of how to interpret the transformed scores.\n\n| Transformed Value | Interpretation |\n|-------------------|----------------|\n| 0-0.35            | Poor           |\n| 0.35 - 0.6        | Low            |\n| 0.6 - 0.8         | Good           |\n| 0.8 - 1           | Excellent      |\n\nUse a laptop or desktop for the best viewing experience. (keep scrolling!)\n:::\n\n::: cr-section\n::: {focus-on=\"cr-map1\"}\n## [`r transformed_scores$station[1]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[1]), '.html')`)\n\n###### Rank: 1\n\n###### Total Score: `r transformed_scores$score[1]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(1)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[1]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map2\"}\n## [`r transformed_scores$station[2]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[2]), '.html')`)\n\n###### Rank: 2\n\n###### Total Score: `r transformed_scores$score[2]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(2)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[2]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map3\"}\n## [`r transformed_scores$station[3]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[3]), '.html')`)\n\n###### Rank: 3\n\n###### Total Score: `r transformed_scores$score[3]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(3)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[3]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map4\"}\n## [`r transformed_scores$station[4]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[4]), '.html')`)\n\n###### Rank: 4\n\n###### Total Score: `r transformed_scores$score[4]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(4)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[4]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map5\"}\n## [`r transformed_scores$station[5]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[5]), '.html')`)\n\n###### Rank: 5\n\n###### Total Score: `r transformed_scores$score[5]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(5)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[5]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map6\"}\n## [`r transformed_scores$station[6]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[6]), '.html')`)\n\n###### Rank: 6\n\n###### Total Score: `r transformed_scores$score[6]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(6)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[6]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map7\"}\n## [`r transformed_scores$station[7]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[7]), '.html')`)\n\n###### Rank: 7\n\n###### Total Score: `r transformed_scores$score[7]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(7)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[7]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map8\"}\n## [`r transformed_scores$station[8]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[8]), '.html')`)\n\n###### Rank: 8\n\n###### Total Score: `r transformed_scores$score[8]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(8)\n\n```\n\nSee more information [here](%60r%20paste0('stations/',san_station(transformed_scores$station%5B8%5D),'/quarto/',san_station(transformed_scores$station%5B8%5D),'.html')%20%60).\n:::\n\n::: {focus-on=\"cr-map9\"}\n## [`r transformed_scores$station[9]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[9]), '.html')`)\n\n###### Rank: 9\n\n###### Total Score: `r transformed_scores$score[9]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(9)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[9]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map10\"}\n## [`r transformed_scores$station[10]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[10]), '.html')`)\n\n###### Rank: 10\n\n###### Total Score: `r transformed_scores$score[10]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(10)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[10]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map11\"}\n## [`r transformed_scores$station[11]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[11]), '.html')`)\n\n###### Rank: 11\n\n###### Total Score: `r transformed_scores$score[11]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(11)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[11]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map12\"}\n## [`r transformed_scores$station[12]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[12]), '.html')`)\n\n###### Rank: 12\n\n###### Total Score: `r transformed_scores$score[1]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(12)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[12]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map13\"}\n## [`r transformed_scores$station[13]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[13]), '.html')`)\n\n###### Rank: 13\n\n###### Total Score: `r transformed_scores$score[10]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(13)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[13]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map14\"}\n## [`r transformed_scores$station[14]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[14]), '.html')`)\n\n###### Rank: 14\n\n###### Total Score: `r transformed_scores$score[14]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(14)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[14]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map15\"}\n## [`r transformed_scores$station[15]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[15]), '.html')`)\n\n###### Rank: 15\n\n###### Total Score: `r transformed_scores$score[15]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(15)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[15]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map16\"}\n## [`r transformed_scores$station[16]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[16]), '.html')`)\n\n###### Rank: 16\n\n###### Total Score: `r transformed_scores$score[16]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(16)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[16]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map17\"}\n## [`r transformed_scores$station[17]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[17]), '.html')`)\n\n###### Rank: 17\n\n###### Total Score: `r transformed_scores$score[17]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(17)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[17]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map18\"}\n## [`r transformed_scores$station[18]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[18]), '.html')`)\n\n###### Rank: 18\n\n###### Total Score: `r transformed_scores$score[18]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(18)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[18]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map19\"}\n## [`r transformed_scores$station[19]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[19]), '.html')`)\n\n###### Rank: 19\n\n###### Total Score: `r transformed_scores$score[19]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(19)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[19]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map20\"}\n## [`r transformed_scores$station[20]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[20]), '.html')`)\n\n###### Rank: 20\n\n###### Total Score: `r transformed_scores$score[20]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(20)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[20]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map21\"}\n## [`r transformed_scores$station[21]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[21]), '.html')`)\n\n###### Rank: 21\n\n###### Total Score: `r transformed_scores$score[21]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(21)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[21]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map22\"}\n## [`r transformed_scores$station[22]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[22]), '.html')`)\n\n###### Rank: 22\n\n###### Total Score: `r transformed_scores$score[22]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(22)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[22]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map23\"}\n## [`r transformed_scores$station[23]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[23]), '.html')`)\n\n###### Rank: 23\n\n###### Total Score: `r transformed_scores$score[23]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(23)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[23]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map24\"}\n## [`r transformed_scores$station[24]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[24]), '.html')`)\n\n###### Rank: 24\n\n###### Total Score: `r transformed_scores$score[24]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(24)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[24]), '.html')`).\n:::\n\n::: {focus-on=\"cr-map25\"}\n## [`r transformed_scores$station[25]`](`r paste0('../',\"stations/\",san_station(transformed_scores$station[25]), '.html')`)\n\n###### Rank: 25\n\n###### Total Score: `r transformed_scores$score[25]` / `r sum(weights)`\n\n\\\n\n```{r}\n\nprintScores(25)\n\n```\n\nSee more information [here](`r paste0('../',\"stations/\",san_station(transformed_scores$station[25]), '.html')`).\n:::\n\n::: {#cr-main}\n:::\n\n::: {#cr-map1}\n:::\n\n::: {#cr-map2}\n:::\n\n::: {#cr-map3}\n:::\n\n::: {#cr-map4}\n:::\n\n::: {#cr-map5}\n:::\n\n::: {#cr-map6}\n:::\n\n::: {#cr-map7}\n:::\n\n::: {#cr-map8}\n:::\n\n::: {#cr-map9}\n:::\n\n::: {#cr-map10}\n:::\n\n::: {#cr-map11}\n:::\n\n::: {#cr-map12}\n:::\n\n::: {#cr-map13}\n:::\n\n::: {#cr-map14}\n:::\n\n::: {#cr-map15}\n:::\n\n::: {#cr-map16}\n:::\n\n::: {#cr-map17}\n:::\n\n::: {#cr-map18}\n:::\n\n::: {#cr-map19}\n:::\n\n::: {#cr-map20}\n:::\n\n::: {#cr-map21}\n:::\n\n::: {#cr-map22}\n:::\n\n::: {#cr-map23}\n:::\n\n::: {#cr-map24}\n:::\n\n::: {#cr-map25}\n:::\n\n:::\n"},"formats":{"closeread-html":{"identifier":{"display-name":"HTML","target-format":"closeread-html","base-format":"html","extension-name":"closeread"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["/Users/paulspasojevic/Documents/yimbymelbourne/train_capacity/_extensions/qmd-lab/closeread/closeread.lua"],"css":["../_extensions/qmd-lab/closeread/closeread.css","index.css","nav_fixes.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.55","page-layout":"article","revealjs-plugins":[],"grid":{"body-width":"900px"},"theme":"zephr","remove-header-space":false,"image":"index_images/main.png","cr-section":{"layout":"overlay-left"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["closeread-html"]}